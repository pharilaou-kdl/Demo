name: Demo API Pipeline

on:
  push:
    branches:
      - main
    paths:
      - src/**
      - .github/**
      - .mvn/**
      - pom.xml
      - Dockerfile

jobs:
  compile:
    name: Compile Demo App
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          
      - name: Setup JDK
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: 'corretto'

      - name:  Project
        run: |
         mvn clean compile

  
  unit-tests:
    name: Unit Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup JDK
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: 'corretto'

      - name: Compile Project
        run: |
          mvn clean test


  build:
    name: Build
    runs-on: ubuntu-latest
    needs: [compile, unit-tests]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup JDK
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: 'corretto'

      - name: Build project
        run: |
          mvn clean package


  build-image:
    name: Build Docker Image and Push to DockerHub
    runs-on: ubuntu-latest
    needs: [build]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 

      - name: Setup JDK
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: 'corretto'

      - name: Build project
        run: |
          mvn clean package

      - name: Extract Project Version
        id: extract_version 
        run: |
          echo "VERSION=$(mvn -q -Dexec.executable='echo' -Dexec.args='${project.version}' --non-recursive exec:exec)" >> $GITHUB_OUTPUT

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{secrets.DOCKERHUB_USRNAME}}
          password: ${{secrets.DOCKERHUB_TOKEN}}

      - name: Build and Push to Docker
        uses: docker/build-push-action@v5
        with:
          context: .
          file: Dockerfile
          push: true
          platforms: linux/amd64
          tags: ${{secrets.DOCKERHUB_USRNAME}}/ci-cd:${{steps.extract_version.outputs.VERSION}},${{secrets.DOCKERHUB_USRNAME}}/ci-cd:latest
          build-args: 
           APP_VERSION=${{steps.extract_version.outputs.VERSION}}


  deploy:
   name: Deploy App
   runs-on: ubuntu-latest
   needs: [build-image]
   steps:
     - name: SSH into VPS and deploy
       uses: appleboy/ssh-action@v1.0.3
       with:
        host: ${{ secrets.VPS_HOST }}
        username: ${{ secrets.VPS_USERNAME }}
        key: ${{ secrets.SSH }}
        passphrase: ${{ secrets.SSH_PASSPHRASE }}
        # password: ${{ secrets.VPS_PASSWORD }}
        script: |
          cd Demo
          git pull ${{ secrets.DEMO_GIT }}
          docker build -t demo .
          docker run -p 8080:8080 demo 
