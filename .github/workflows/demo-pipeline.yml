name: Demo API Pipeline

on:
  push:
    branches:
      - main
    paths:
      - src/**
      - .github/**
      - .mvn/**
      - pom.xml
      - Dockerfile

jobs:
  compile:
    name: Compile Demo App
    runs-on: ubuntu
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup JDK
        uses: actions/stup-java@v4
        with:
          java-version: 17
          distribution: 'corretto'

      - name: Compile Project
        run: |
          ./mvnw clean compile

  unit-tests:
    name: Unit Tests
    runs-on: ubuntu
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup JDK
        uses: actions/stup-java@v4
        with:
          java-version: 17
          distribution: 'corretto'

      - name: Compile Project
        run: |
          ./mvnw clean test

  build:
    name: Build
    runs-on: ubuntu
    needs: [compile, unit-tests]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup JDK
        uses: actions/stup-java@v4
        with:
          java-version: 17
          distribution: 'corretto'

      - name: Build project
        run: |
          ./mvnw clean package

  build-image:
    name: Build Docker Image
    runs-on: ubuntu
    needs: [build]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup JDK
        uses: actions/stup-java@v4
        with:
          java-version: 17
          distribution: 'corretto'

      - name: Build project
        run: |
          ./mvnw clean package

      #      - name: Extract Project Version
      #        id: extract_version
      #        run: |
      #          echo "VERSION=$(./mvnw -q -Dexec.executable='echo' -Dexec.args='${project.version}' --non-recursive exec:exec)" >> $GITHUB_OUTPUT

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{secrets.DOCKERHUB_USRNAME}}
          password: ${{secrets.DOCKERHUB_TOKEN}}

      - name: Build and Push to Docker
        uses: docker/build-push-action@v5
        with:
          context: .
          file: Dockerfile
          push: true
          platform: linux/amd64
          tags: ${{secrets.DOCKERHUB_USRNAME}}/ci-cd:latest

#  deploy:
#    name: Deploy App
#    runs-on: ubuntu
#    needs: [build-image]
#    steps:
#      - name: Checkout code
#        run: ssh ${{ secrets.VPS_USERNAME }}@${{ Secrets.VPS_VPS_IP }} "mkdir -p ci-cd"
#
#      - name: Copy Dockerfile
#        run: scp Dockerfile ${{ secrets.VPS_USERNAME }}@${{ Secrets.VPS_VPS_IP }}:ci-cd/Dockerfile
#
#      - name: Set ENV variable and deploy
#        run: |
#             ssh ${{ secrets.VPS_USERNAME }}@${{ Secrets.VPS_IP }} "mkdir -p ci-cd" <<EOF
#             export EMAIL_HOSTNAME=${{ secrets.EMAIL_HOSTNAME }}
#             export EMAIL_USER_NAME=${{ secrets.EMAIL_USER_NAME }}
#             export EMAIL_PASSWORD=${{ secrets.EMAIL_PASSWORD }}
#             cd ci-cd
#             docker run -d --name demo-container demo/demo:0.0.1
#             EOF
